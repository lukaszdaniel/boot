msgid ""
msgstr ""
"Project-Id-Version: boot 1.3-31\n"
"POT-Creation-Date: 2024-09-13 18:58\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"


#: R/bootfuns.q: 0
#. R/bootfuns.q: gettextf("%s distribution not supported: using normal instead",     sQuote(qdist))

msgid "%s distribution not supported: using normal instead"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("'F.surv' is required but missing")

msgid "'F.surv' is required but missing"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("'G.surv' is required but missing")

msgid "'G.surv' is required but missing"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: gettextf("'K' has been set to %f", K)

msgid "'K' has been set to %f"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("'K' outside allowable range")

msgid "'K' outside allowable range"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("'R' and 'alpha' have incompatible lengths")

msgid "'R' and 'alpha' have incompatible lengths"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("'R' and 'theta' have incompatible lengths")

msgid "'R' and 'theta' have incompatible lengths"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("'R' must be positive")

msgid "'R' must be positive"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("'alpha' ignored; R[1L] = 0")

msgid "'alpha' ignored; R[1L] = 0"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("'data' must be a matrix with at least 2 columns")
#. R/bootfuns.q: stop("'data' must be a matrix with at least 2 columns")

msgid "'data' must be a matrix with at least 2 columns"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("'index' must contain 2 elements")

msgid "'index' must contain 2 elements"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("'simple=TRUE' is only valid for 'sim=\"ordinary\", stype=\"i\", n=0', so ignored")

msgid "'simple=TRUE' is only valid for 'sim=\"ordinary\", stype=\"i\", n=0', so ignored"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("'strata' of wrong length")

msgid "'strata' of wrong length"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("'stype' must be \"w\" for type=\"inf\"")

msgid "'stype' must be \"w\" for type=\"inf\""
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("'t' and 't0' must be supplied together")

msgid "'t' and 't0' must be supplied together"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: gettextf("'t' must of length %d", boot.out$R)

msgid "'t' must of length %d"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("'theta' must be supplied if R[1L] = 0")

msgid "'theta' must be supplied if R[1L] = 0"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("'theta' or 'lambda' required")

msgid "'theta' or 'lambda' required"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("'u' must be a function")

msgid "'u' must be a function"
msgstr ""


#: R/bootpracs.q: 0
#. R/bootpracs.q: stop("0 elements not allowed in 'q'")

msgid "0 elements not allowed in 'q'"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: gettextf("All values of t* are equal to %s", mean(t, na.rm = TRUE))

msgid "All values of t* are equal to %s"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("BCa intervals not defined for time series bootstraps")

msgid "BCa intervals not defined for time series bootstraps"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("R[1L] must be positive for frequency smoothing")

msgid "R[1L] must be positive for frequency smoothing"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("arguments are not all the same type of \"boot\" object")

msgid "arguments are not all the same type of \"boot\" object"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("array cannot be found for parametric bootstrap")

msgid "array cannot be found for parametric bootstrap"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("boot.array not implemented for this object")

msgid "boot.array not implemented for this object"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("bootstrap object needed for type=\"reg\"")

msgid "bootstrap object needed for type=\"reg\""
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("bootstrap output matrix missing")

msgid "bootstrap output matrix missing"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("bootstrap output object or 't0' required")

msgid "bootstrap output object or 't0' required"
msgstr ""


#: R/bootpracs.q: 0
#. R/bootpracs.q: stop("bootstrap replicates must be supplied")
#. R/bootpracs.q: stop("bootstrap replicates must be supplied")
#. R/bootpracs.q: stop("bootstrap replicates must be supplied")

msgid "bootstrap replicates must be supplied"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("bootstrap variances needed for studentized intervals")

msgid "bootstrap variances needed for studentized intervals"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("control methods undefined when 'boot.out' has weights")

msgid "control methods undefined when 'boot.out' has weights"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("dimensions of 'R' and 'weights' do not match")

msgid "dimensions of 'R' and 'weights' do not match"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("either 'A' and 'u' or 'K.adj' and 'K2' must be supplied")

msgid "either 'A' and 'u' or 'K.adj' and 'K2' must be supplied"
msgstr ""


#: R/bootpracs.q: 0
#. R/bootpracs.q: stop("either 'boot.out' or 'w' must be specified.")
#. R/bootpracs.q: stop("either 'boot.out' or 'w' must be specified.")
#. R/bootpracs.q: stop("either 'boot.out' or 'w' must be specified.")

msgid "either 'boot.out' or 'w' must be specified."
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("estimated adjustment 'a' is NA")

msgid "estimated adjustment 'a' is NA"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("estimated adjustment 'w' is infinite")

msgid "estimated adjustment 'w' is infinite"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("extreme order statistics used as endpoints")

msgid "extreme order statistics used as endpoints"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("extreme values used for quantiles")

msgid "extreme values used for quantiles"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("function 'u' missing")

msgid "function 'u' missing"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("index array not defined for model-based resampling")

msgid "index array not defined for model-based resampling"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("index out of bounds; minimum index only used.")

msgid "index out of bounds; minimum index only used."
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("indices are incompatible with 'ncol(data)'")

msgid "indices are incompatible with 'ncol(data)'"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("influence values cannot be found from a parametric bootstrap")

msgid "influence values cannot be found from a parametric bootstrap"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("input 't' ignored; type=\"inf\"")

msgid "input 't' ignored; type=\"inf\""
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("input 't' ignored; type=\"jack\"")

msgid "input 't' ignored; type=\"jack\""
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("input 't' ignored; type=\"pos\"")

msgid "input 't' ignored; type=\"pos\""
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("input 't0' ignored: neither 't' nor 'L' supplied")

msgid "input 't0' ignored: neither 't' nor 'L' supplied"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("invalid value of 'l'")

msgid "invalid value of 'l'"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("invalid value of 'sim' supplied")

msgid "invalid value of 'sim' supplied"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("length of 'm' incompatible with 'strata'")

msgid "length of 'm' incompatible with 'strata'"
msgstr ""


#: R/bootpracs.q: 0
#. R/bootpracs.q: gettextf("likelihood exceeds %f at only one point", lim)

msgid "likelihood exceeds %f at only one point"
msgstr ""


#: R/bootpracs.q: 0
#. R/bootpracs.q: gettextf("likelihood never exceeds %f", lim)

msgid "likelihood never exceeds %f"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("missing values not allowed in 'data'")

msgid "missing values not allowed in 'data'"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("multivariate time series not allowed")

msgid "multivariate time series not allowed"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("negative value of 'm' supplied")

msgid "negative value of 'm' supplied"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("neither 'data' nor bootstrap object specified")

msgid "neither 'data' nor bootstrap object specified"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("neither 'statistic' nor bootstrap object specified")

msgid "neither 'statistic' nor bootstrap object specified"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("no coefficients in Cox model -- model ignored")

msgid "no coefficients in Cox model -- model ignored"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("no data in call to 'boot'")

msgid "no data in call to 'boot'"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: gettextf("number of columns of 'A' (%d) not equal to length of 'u' (%d)",     d, length(u))

msgid "number of columns of 'A' (%d) not equal to length of 'u' (%d)"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("one of 't' or 't0' required")

msgid "one of 't' or 't0' required"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: gettextf("only columns %s and %s of 'data' used", index[1L],     index[2L])

msgid "only columns %s and %s of 'data' used"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("only first 2 elements of 'index' used")

msgid "only first 2 elements of 'index' used"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("only first column of 't' used")

msgid "only first column of 't' used"
msgstr ""


#: R/bootfuns.q: 0
#: R/bootpracs.q: 0
#: R/bootpracs.q: 0
#: R/bootpracs.q: 0
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootfuns.q: warning("only first element of 'index' used")
#. R/bootpracs.q: warning("only first element of 'index' used")
#. R/bootpracs.q: warning("only first element of 'index' used")
#. R/bootpracs.q: warning("only first element of 'index' used")

msgid "only first element of 'index' used"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("only first element of 'index' used in 'abc.ci'")

msgid "only first element of 'index' used in 'abc.ci'"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("sim = \"weird\" cannot be used with a \"coxph\" object")

msgid "sim = \"weird\" cannot be used with a \"coxph\" object"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("this type not implemented for Binary")

msgid "this type not implemented for Binary"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("this type not implemented for Poisson")

msgid "this type not implemented for Poisson"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("unable to achieve requested overall error rate")

msgid "unable to achieve requested overall error rate"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("unable to calculate 'var.t0'")

msgid "unable to calculate 'var.t0'"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: gettextf("unable to find multiplier for %f", theta[i])

msgid "unable to find multiplier for %f"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("unable to find range")
#. R/bootfuns.q: stop("unable to find range")
#. R/bootfuns.q: stop("unable to find range")
#. R/bootfuns.q: stop("unable to find range")

msgid "unable to find range"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("unknown type of \"boot\" object")

msgid "unknown type of \"boot\" object"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("unknown value of 'sim'")

msgid "unknown value of 'sim'"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("unrecognized value of 'sim'")

msgid "unrecognized value of 'sim'"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: stop("use 'boot.ci' for scalar parameters")

msgid "use 'boot.ci' for scalar parameters"
msgstr ""


#: R/bootfuns.q: 0
#. R/bootfuns.q: warning("variance required for studentized intervals")

msgid "variance required for studentized intervals"
msgstr ""
